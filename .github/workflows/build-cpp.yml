name: "Build C++ Projects"

on:
  workflow_call:
    inputs:
      vcpkg_packages:
        type: string
        required: false
        description: 'A list of vcpkg packages to install'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install vcpkg (Windows)
        if: runner.os == 'Windows'
        uses: johnwason/vcpkg-action@v7.0.1
        with:
          pkgs: ${{ inputs.vcpkg_packages }}
          triplet: x64-windows
          token: ${{ github.token }}

      - name: Install vcpkg (Windows)
        if: runner.os == 'Linux'
        uses: johnwason/vcpkg-action@v7.0.1
        with:
          pkgs: ${{ inputs.vcpkg_packages }}
          triplet: x64-linux
          token: ${{ github.token }}

      - name: Configure CMake (Debug)
        run: cmake -B ${{github.workspace}}/build-cmake-debug -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows -DVCPKG_MANIFEST_MODE=OFF
  
      - name: Build (Release)
        run: cmake --build ${{github.workspace}}/build-cmake-debug --config Debug
  
      - name: Configure CMake (Release)
        run: cmake -B ${{github.workspace}}/build-cmake-release -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows -DVCPKG_MANIFEST_MODE=OFF
  
      - name: Build (Release)
        run: cmake --build ${{github.workspace}}/build-cmake-release --config Release
  
      - name: Upload Debug
        uses: actions/upload-artifact@v4.6.2
        with:
          name: Windows
          path: build-cmake-debug/Debug
          
      - name: Upload Release
        uses: actions/upload-artifact@v4.6.2
        with:
          name: Windows
          path: build-cmake-release/Release
